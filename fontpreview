#!/usr/bin/env bash

FONT_PREVIEW="$(mktemp --tmpdir="$FONTPREVIEW_DIR" fontpreview_XXXXXXXX.png)"
THIS_WINDOW=$(xdotool getactivewindow)
FTPR_DIR="$HOME/.cache/ftpr"

export FTPR_TEXT_FILE="$FTPR_DIR/text_preview"
export FTPR_TEXT_HIS_FILE="$FTPR_DIR/text_preview_history"
export SHELL=$(which bash)
export FONT_INFO_LIST="$(fc-list)"
export FONT_LIST="$(echo "${FONT_INFO_LIST}" | awk -F": " "{sub(/:style=/,\" ðŸŽ”  \"); printf(\"%s\n\", \$2) }" | sort)"



generate_font_image_preview(){
    # Credits: https://bit.ly/2UvLVhM
    SIZE=532x365
    POSITION="+0+0"
    FONT_SIZE=38
    BG_COLOR="#ffffff"
    FG_COLOR="#000000"

    convert -size $SIZE xc:"$BG_COLOR" \
            -gravity center \
            -pointsize $FONT_SIZE \
            -font "$1" \
            -fill "$FG_COLOR" \
            -annotate +0+0 "$(cat "$FTPR_TEXT_FILE")" \
            -flatten "$FONT_PREVIEW"
}

get_font_info_line() {
    echo "$FONT_INFO_LIST" |\
        grep ": $(echo "$1" | sed "s/ ðŸŽ”  /:style=/g")\$"
}

get_font_info_preview() {
    get_font_info_line "$1" |\
        sed -r 's/: ?/\n/g'
}

get_font_file() {
    get_font_info_line "$1" |\
        awk -F": " '{print $1}'
}

copy_path() {
    get_font_info_line "$1" |\
        awk -F": " '{print $1}' |\
        xclip -i -sel clip
}

copy_info() {
    get_font_info_line "$1" |\
        awk -F": " '{print $2}' |\
        xclip -i -sel clip
}


export_function() {
    export -f get_font_info_line
    export -f get_font_info_preview
    export -f change_preview_text
    export -f copy_path
    export -f copy_info
}

pre_action() {
    [ -d "$FTPR_DIR" ] || mkdir -p "$FTPR_DIR"
    [ -f "$FTPR_TEXT_FILE" ] ||\
        echo -E "ABCDEFGHIJKLM\nNOPQRSTUVWXYZ\nabcdefghijklm\nnopqrstuvwxyz\n1234567890\n!@$\%(){}[]" > "$FTPR_TEXT_FILE"
    [ -f "$FTPR_TEXT_HIS_FILE" ] ||\
        echo -E "ABCDEFGHIJKLM\nNOPQRSTUVWXYZ\nabcdefghijklm\nnopqrstuvwxyz\n1234567890\n!@$\%(){}[]" > "$FTPR_TEXT_HIS_FILE"
    sxiv_pid=-1000
    export_function
}

change_preview_text() {
    local text=$(cat $FTPR_TEXT_HIS_FILE | fzf --print-query)

    [ -z "$text" ] || {
        echo "$text" > "$FTPR_TEXT_FILE";
        grep -F "$text" "$FTPR_TEXT_HIS_FILE" || echo "$text" >> "$FTPR_TEXT_HIS_FILE";
    }
}

post_action() {
    rm $FONT_PREVIEW
    [ $sxiv_pid -gt 0 ] && [ $(ps -p $sxiv_pid | tail -1 | awk '{print $4}') == sxiv ] && kill $sxiv_pid
}

main() {
    local first_run font_file fzf_bind

    first_run=true

    fzf_bind='enter:execute(echo {}),alt-t:execute(change_preview_text),alt-1:execute(copy_path {}),alt-2:execute(copy_info {})'
    
    coproc { echo "$FONT_LIST" | fzf --preview-window=up\
                                     --preview="get_font_info_preview {}"\
                                     --bind="${fzf_bind}";
           }

    while read -r font_style <&"${COPROC[0]}"; do
        [[ -z $font_style ]] && break
            
        font_file=$(get_font_file "$font_style")

        generate_font_image_preview "$font_file"

        if $first_run || [ $(ps -p $sxiv_pid | tail -1 | awk '{print $4}') != sxiv ]; then
            first_run=false

            sxiv -N "fontpreview"  -g "$SIZE$POSITION"  -b "$FONT_PREVIEW" &

            sleep 0.1
            xdotool windowfocus $THIS_WINDOW

            sxiv_pid=$!
        fi
    done
}

main2() {
    local first_run font_file fzf_bind

    first_run=true
    sxiv_pid=-1000

    fzf_bind='enter:execute(echo {}),alt-t:execute(change_preview_text)'
    
    cd "$1" || exit
    
    coproc { ls | grep -iE "\.(otf)|(ttf)$" | fzf --preview-window=up\
                                     --preview="otfinfo --info {}"\
                                     --bind="${fzf_bind}";
           }

    while read -r font_path <&"${COPROC[0]}"; do
        [[ -z $font_path ]] && break
            
        generate_font_image_preview "$font_path"

        if $first_run || [ $(ps -p $sxiv_pid | tail -1 | awk '{print $4}') != sxiv ]; then
            first_run=false

            sxiv -N "fontpreview"  -g "$SIZE$POSITION"  -b "$FONT_PREVIEW" &

            sleep 0.1
            
            xdotool windowfocus $THIS_WINDOW

            sxiv_pid=$!
        fi
    done

}

pre_action

if [ $# -eq 0 ]; then
    main
elif [ -d "$1" ]; then
    main2 "$1"
fi

post_action
